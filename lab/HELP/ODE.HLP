















































@t ВВЕДЕНИЕ.
@N
@N
@10 В этой работе Вы познакомитесь с
@e -1 0 ЧИСЛЕННЫЕ МЕТОДЫ
[численными методами]
решения задачи Коши для обыкновенных дифференциальных уравнений (ОДУ) :@N
@N
@45 du@ /@ dx@ -@ G@ (@ x@ ,@ u@ )@ =@ 0@ ,@5 x@ >@ 0@ ,@N
@N
@s -1 0 6 small
@s -1 0 6 small
@46 u@ (@ x{0}@ )@ =@ u{0}@ .@N
@N
@10 В работу включены следующие
@e -1 0 методы Рунге-Кутты
[методы Рунге-Кутты]
численного решения задачи Коши для@ обыкновенных@ дифференциальных@ уравнений :@N
@e -1 0 rk1
@10 -@ [Рунге-Кутты@ 1-го@ порядка@ точности]@ (метод@ Эйлера),@N
@e -1 0 rk2
@10 -@ [Рунге-Кутты@ 2-го@ порядка@ точности]@ (1),@N
@e -1 0 rk22
@10 -@ [Рунге-Кутты@ 2-го@ порядка@ точности]@ (2),@N

@e -1 0 rk3
@10 -@ [Рунге-Кутты@ 3-го@ порядка@ точности]@ (метод@ Хойна),@N
@e -1 0 rk4
@10 -@ [Рунге-Кутты@ 4-го@ порядка@ точности],@N
@e -1 0 Ричардсон
@10 -@ [экстраполяция@ Ричардсона] ( для метода Рунге-Кутты@N
@12 1-го порядка точности ) .@N
@10 В процессе работы Вы сможете получать приближенные решения
 различных обыкновенных дифференциальных уравнений ( или систем
 обыкновенных дифференциальных уравнений ) при помощи разных численных
 методов, исследовать их поведение в зависимости от величины шага расчетной
 сетки, параметров задачи, сравнивать их между собой и с некоторыми
 точными решениями, получать фазовые портреты .@N
@N
@n
@t ЧИСЛЕННЫЕ МЕТОДЫ
@n
@s -1 0 0 *__current__
@34 { ЧИСЛЕННЫЕ МЕТОДЫ РЕШЕНИЯ}
@s -1 0 0 *__current__
@30 {ЗАДАЧИ КОШИ ДЛЯ ОБЫКНОВЕННЫХ}
@s -1 0 0 *__current__
@28 {ДИФФЕРЕНЦИАЛЬНЫХ УРАВНЕНИЙ (ОДУ).}@N
@N
@10 Пусть@N
@N
(1)@40 Lu@ =@ F@ @N
@N
 - краткое символьное обозначение исходной
@e -1 0 дифференциальная задача
[дифференциальной задачи].@N
@10 Пусть, далее, введена в рассмотрение
@e -1 0 сеточная область
[сеточная область]
@s -1 0 0 symbol
@s -1 0 -3 small
{W}{h}
@s -1 0 -3 small
 и пространство  U{h} сеточных функций
@s -1 0 -3 small
 u{h} ;@N
@N
@s -1 0 -3 small
@s -1 0 6 small
@s -1 0 -3 small
@s -1 0 -3 small
(1{h})@38  L{h}u{h}@ =@ F{h}@  @N
@N
 - соответствующее символьное обозначение
@e -1 0 разностная задача
[разностной задачи]@ (cхемы), которой заменяется задача (1),
решение которой может быть вычислено с помощью ЭВМ.@N
@s -1 0 0 *__current__
{ЗАМЕЧАНИЕ@  1@.}@N
Решение
@s -1 0 -3 small
(1{h})
paccматривается в качестве приближенного решения
задачи (1) в узлах сетки.
Ошибка этого приближения определяется как сеточная функция@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@s -1 0 6 small
@s -1 0 -3 small
@40 {d}u{h}@ @ =@ @[@ u@ @]@ {h}@ -@ u{h},@N
@N
где
@s -1 0 6 small
 @[@ u@ @]@ {h}
- значения точного решения в узлах сетки.@N
@10 Введем в пространстве сеточных функций какую-либо норму ||.||.
@e -1 0 d = || u(h) ||
[Погрешностью метода] численного решения задачи (1) в смысле выбранной
нормы принято называть величину @N
@N
@r@e -1 0 d = || u(h) ||
@s -1 0 0 symbol
@40 {d} =
@s -1 0 0 symbol
@s -1 0 -3 small
|| {d}u{h} ||. @N
@N
Если выполнено условие
@s -1 0 0 symbol
@s -1 0 -3 small
{d}@ =@ O(@ h{р}@ ),
то говорят, что схема имеет р-ый порядок сходимости.@N
@s -1 0 0 symbol
@10 Из теории известно, что величина {d} имеет тот же порядок, что и
погрешность аппроксимации
@s -1 0 0 symbol
@s -1 0 -3 small
             || {d}F{h} ||,
которая определяется как@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@s -1 0 6 small
@s -1 0 -3 small
@s -1 0 -3 small
@40 {d}F{h}@ =@ L{h}@[@ u@ @]@ {h}@ -@ F{h}.@N
@N
@10 Другими словами,
@s -1 0 0 symbol
@s -1 0 -3 small
 {d}F{h} -
 невязка, характеризующая насколько не
удовлетворяется уравнения
@s -1 0 -3 small
 (1{h})
 при подстановке в них решения
исходной задачи (1).@N
@s -1 0 0 *__current__
{ЗАМЕЧАНИЕ@ 2@.}@N
@s -1 0 0 symbol
@2 Утверждение о том, что погрешность {d}, т. е. погрешность метода
@s -1 0 -3 small
(1{h})
 для задачи (1), имеет тот же порядок, что и погрешность
@s -1 0 0 symbol
@s -1 0 -3 small
аппроксимации || {d}F{h} ||, справедлива только в том случае, если
задача
@s -1 0 -3 small
 (1{h}) корректна, т. е. решение ее существует, единственно и
равномерно по h, устойчиво по
отношению к возмущениям входных данных.@N
@10 Для линейных задач последнее требование означает, что
существует С@ =@ const, не зависящее от параметра h такое, что@n
@N
@s -1 0 -3 small
@s -1 0 -3 small
@40 ||u{h}||@ <@ C@ ||F{h}||@N
@N
для любых
@s -1 0 -3 small
 F{h}.@N
@s -1 0 0 *__current__
{ЗАМЕЧАНИЕ 3.}@N
@10 Таким образом, вопрос о
@s -1 0 0 *__current__
 {сходимости} метода
@s -1 0 -3 small
 (1{h})
 сводится к
исследованию разностной схемы
@s -1 0 -3 small
 (1{h})
 на
@s -1 0 0 *__current__
{аппроксимацию} и на
@s -1 0 0 *__current__
 {устойчивость}.@N
@10 В работу включены следующие
@e -1 0 методы Рунге-Кутты
[методы Рунге-Кутты]
численного решения задачи Коши для@ обыкновенных@ дифференциальных@ уравнений :@N
@e -1 0 rk1
@10 -@ [Рунге-Кутты@ 1-го@ порядка@ точности]@ (метод@ Эйлера),@N
@e -1 0 rk2
@10 -@ [Рунге-Кутты@ 2-го@ порядка@ точности]@ (1),@N
@e -1 0 rk22
@10 -@ [Рунге-Кутты@ 2-го@ порядка@ точности]@ (2),@N

@e -1 0 rk3
@10 -@ [Рунге-Кутты@ 3-го@ порядка@ точности]@ (метод@ Хойна),@N
@e -1 0 rk4
@10 -@ [Рунге-Кутты@ 4-го@ порядка@ точности],@N
@e -1 0 Ричардсон
@10 -@ [экстраполяция@ Ричардсона] ( для метода Рунге-Кутты@N
@12 1-го порядка точности ) .@N


@10
@t устойчиво
@N
@s -1 0 0 *__current__
@55 {УСТОЙЧИВОСТЬ.}@N
@N
@10 Для линейных задач требование устойчивости означает, что
существует С@ =@ const, не зависящее от параметра h такое, что@n
@N
@s -1 0 -3 small
@s -1 0 -3 small
@40 ||@ u{h}@ ||@ <@ C@ ||@ F{h}@ ||@N
@N
для любых
@s -1 0 -3 small
 F{h}.@N
@10 Отметим, что неустойчивость при численном решении ОДУ
может развиваться из-за неудачной аппроксимации производной
разностным соотношением, а также из-за неудачного выбора
шага h (без учета вида функции G (@ x@ ,@ u@ )@ )@ .@N
@10 Например, разностная схема  (@ разностный метод@ )@N
@N
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@20 4(@ u{n+1}@ -@ u{n-1}@ )@ /@ (@ 2h@ )@ -@ 3@ (@ u{n+1}@ -@ u{n}@ )@ /@ h@ +@ A@ u{n}@ =@ 0,@ @5 n@ =@ 1@ ,@ 2@ ,@ ...@ ,@N
@N
@s -1 0 6 small
@s -1 0 -3 small
@45 u{0}@ =@ u{0}@n
@n
аппроксимирует дифференциальную задачу@60 @N
@n
@40 d@ u@ /@ dx@ +@ A@ u@ =@ 0@ ,@5 A@ =@ const@ ,@N
@N
@s -1 0 6 small
@s -1 0 -3 small
@40 u@ (@ x{0}@ )@ =@ u{0}@n
@n
с первым порядком аппроксимации по h, однако, как можно показать,
она не является устойчивой, т.е. сходимость численного решения
к точному отсутствует.@n
@10 Величина же шага интегрирования, например, при выборе для
численного решения задачи (1) схемы Эйлера@N
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@40 @ (u{n+1}@ -@ u{n}@ )@ /@ h@ -@ G{n}@ =@ 0@ ,@N
@n
@10 ограничена следующим соотношением: @N
@n
@40 h@ ||@ dG@ (@ x@ ,@ u@ )@ /@ du@ ||@ <<@ 1@ ,@n
@n
@10 или,в нашем случае: @N
@n
@40 h@ |@ A@ |@ <<@ 1@ .@N
@n

@t дифференциальная задача
@n
@s -1 0 0 *__current__
@40 {ДИФФЕРЕНЦИАЛЬНАЯ ЗАДАЧА.}
@N
@N
@N
@45 du@ /@ dx@ +@ G@ (@ x@ ,@ u@ )@ =@ 0@ ,@5 x@ >@ 0@N
@N
@s -1 0 6 small
@s -1 0 -3 small
@55 u@ (@ x{0}@ )@ =@ u{0}@N
@N

@t сеточная область
@n
@s -1 0 0 *__current__
@45 {СЕТОЧНАЯ ОБЛАСТЬ.}@n
@N
@40 *-----*-----*---------*-------------------->@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@40 x{0}@2 ,@ x{1}@2 ,@ x{2}@3 ...@3 x{N}@N
@n
@n
@s -1 0 0 symbol
@s -1 0 -3 small
@s -1 0 6 small
@40 {W}{h}@ =@ @{@2 x{n} ;@2 n@ =@ , 0 @ 1 ,@ 2 ,@ ...@ , N@2 @} @N
@N
@s -1 0 6 small
@40 x{n}@ =@ n@ h ,@5 h@ -@ шаг@ сетки ,@N
@n
@s -1 0 -3 small
@s -1 0 6 small
@40 u{h}@ =@ @{@2 u{n} ;@2 n@ =@ 0 ,@ 1 ,@ 2 ,@ ...@ ,@ N@2 @} ,@N
@n
@s -1 0 6 small
@s -1 0 6 small
@5 u{n} - компонента сеточной функции, относящаяся к узлу x{n}.@n
@n

@t разностная задача
@N
@s -1 0 0 *__current__
@40  {РАЗНОСТНАЯ ЗАДАЧА . }@N
@N
@10  Например,для рассмотренной дифференциальной задачи, разностная
задача может быть представлена в виде ( метод Эйлера ) :@N
@N
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@40 (@ u{n+1}@ -@ u{n}@ )@ /@ h@ =@ G{n}@ ,@5 n@ =@ 1@ ,@ 2@ ,@ ... , N ;@N
@n
@s -1 0 6 small
@s -1 0 -3 small
@50 u{0}@ =@ u{0}@ .@n
@n

@t d = || u(h) ||
@n
@s -1 0 0 *__current__
@45 {ПОГРЕШНОСТЬ МЕТОДА.}@N
@N
@10 Например, величину погрешности можно определить следующим образом :@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@s -1 0 -3 small
@30 {d}@ =@ max@ |@ @[u@]{h}@ -@ u{h}@ |@2 .@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@10 Если {d}@ =@ O(@ h{p}@ )@ , то говорят, что метод имеет p-ый
порядок сходимости.@n
@10 Теоретическая глобальная ( т.е. на всем рассматриваемом
интервале интегрирования ) оценка погрешности может быть дана
следующей формулой:@N
@N
@s -1 0 -3 small
@s -1 0 -3 small
@s -1 0 0 symbol
@s -1 0 -3 small
@s -1 0 0 symbol
@s -1 0 -3 @small
@s -1 0 6 small
@20 max@ |@ @[@ u@ @]{h}@ -@ u{h}@ |@ {г}@ c@ h{p-1}@ (@ b@ -a@ )@ exp@ @[@ {Є}{b}{a}L(x)dx@ @]@ ,@n
@n

@s -1 0 -3 @small
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 0 symbol
где@7 |@ G{'}{u}@ (@ x@ ,u@ )@ |@ {г}@ L@ (@ x@ )@ ,@5 L@ (@ x@ )@ {│}@ 0@ ,@5 c@ =@ const@ ;@N
 a@ ,@ b@ -@ концы отрезка интегрирования.@N
@10 Однако, в расчетной практике обычно используется оценка
погрешности по правилу Рунге. Для этого сравниваются приближенные
решения, полученные при различных шагах сетки ( h и h/2 ). Несложные
выкладки приводят к следующей простой формуле для оценки погрешности@ :@N
@N
@s -1 0 0 symbol
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 -3 small
@s -1 0 -3 small
@30 {d}@ =@ (@ u{h}@ -@ u{h/2}@ )@ /@ (@ 2{p}@ -@ 1@ )@ +@ O@ (@ h{p+1}@ )@ .@n
@n
@10 Это правило лежит в основе алгоритмов численного интегрирования
с автоматическим выбором шага по заданной локальной точности. На каждом
шаге интегрирования ( при переходе от
@s -1 0 6 small
@s -1 0 6 small
x{n} к x{n+1} ) вычисления проводятся дважды :  с шагом h и h/2. Далее
вычисляется погрешность ( по приведенной формуле ), которая сравнивается
с заданной локальной точностью
@s -1 0 0 symbol
@s -1 0 0 symbol
@s -1 0 0 symbol
{e}. Если величина {d} больше {e}, то шаг уменьшается вдвое и
расчетная процедура повторяется. Если же эта величина оказывается
значительно меньше
@s -1 0 0 symbol
{e} ( предельное значение указывается ), то шаг h увеличивается вдвое и т.д.@N

@t методы Рунге-Кутты
@n
@s -1 0 0 *__current__
@40 {МЕТОДЫ РУНГЕ-КУТТЫ.}@N
@N
@s -1 0 6 small
@s -1 0 6 small
@10 Пусть значение u{n} приближенного решения в точке x{n}
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
уже найдено и требуется вычислить u{n+1} в точке x{n+1}@ =@ x{n}@ +@ h .@N
@10 Задаем целое m и выписываем выражения@N
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{1}@ =@ G@ (@ x{n}@ ,@ u{n}@ )@ ,@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 6 small
@30 k{2}@ =@ G@ (@ x{n}@ +@ {a}@ h@ ,@ u{n}@ +@ {a}@ h@ k{1}@ )@ ,@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 6 small
@30 k{3}@ =@ G@ (@ x{n}@ +@ {b}@ h@ ,@ u{n}@ +@ {b}@ h@ k{2}@ )@ ,@n
@30 .@3 .@3 .@3 .@3 .@3 .@3 .@3 .@3 .@3 .@3 .@3 .@3 .@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 6 small
@s -1 0 0 symbol
@s -1 0 6 small
@30 k{m}@ =@ G@ (@ x{n}@ +@ {g}@ h@ ,@ u{n}@ +@ {g}@ h@ k{m-1}@ )@ .@n
@n
@10 Затем@ полагаем@n
@n
@s -1 0 6 small
@s -1 0 -3 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@20 L{h}@ u{h}@ =@ (@ u{n+1}@ -@ u{n})@ /h@ -@ (@ p{1}@ k{1}@ +@ ...@ +@ p{m}@ k{m}@ )@ =@ 0@ ,@5 n@ =@ 0@ ,@ 1@ ,@ 2@ , ... ,@n
@n
@s -1 0 6 small
@s -1 0 -3 small
@30 u{0}@ =@ u{0}@ .@n
@N
@s -1 0 0 symbol
@s -1 0 0 symbol
@s -1 0 0 symbol
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@10 Коэффициенты {a} ,{b}, {g}, p{1}, p{2}, ... , p{m} подбираем так, чтобы получить
при заданном m аппроксимацию возможно более высокого порядка.@n

@t rk1
@n
@s -1 0 0 *__current__
@34 {МЕТОД РУНГЕ-КУТТЫ 1-ГО ПОРЯДКА} @n
@s -1 0 0 *__current__
@40 {ТОЧНОСТИ (МЕТОД ЭЙЛЕРА).}@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 (@ u{n+1}@ -@ u{n}@ )@ /@ h@ -@ G{n}@ =@ 0@ ,@5 n@ =@ 1@ ,@ 2@ ,@ ...@ ,@n
@n
@s -1 0 6 small
@s -1 0 -3 small
@50 u{0}@ =@ u{0}@ .

@t rk2
@n
@s -1 0 0 *__current__
@15 {МЕТОД РУНГЕ-КУТТЫ 2-ГО ПОРЯДКА ТОЧНОСТИ (1).}@N
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 (@ u{n+1}@ -@ u{n}@ )@ /@ h@ -@ (@ k{1}@ +@ k{2}@ )@ /@ 2@ =@ 0@ ,@5 n@ =@ 1 ,@ 2 ,@ ... ,@N
@n
@s -1 0 6 small
@s -1 0 -3 small
@30 u{0}@ =@ u{0}@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{1}@ =@ f@ (@ x{n}@ ,@ u{n}@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{2}@ =@ f@ (@ x{n}@ +@ h@ ,@ u{n}@ +@ h@ k{1}@ )@ .@n
@N

@t rk22
@N
@s -1 0 0 *__current__
@15 {МЕТОД РУНГЕ-КУТТЫ 2-ГО ПОРЯДКА ТОЧНОСТИ (2).}@N
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 (@ u{n+1}@ -@ u{n}@ )@ /@ h@ -@ (@ k{1}@ +@ k{2}@ ) =@ 0@ ,@5 n@ =@ 1 ,@ 2 ,@ ... ,@N
@n
@s -1 0 6 small
@s -1 0 -3 small
@30 u{0}@ =@ u{0}@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{1}@ =@ f@ (@ x{n}@ ,@ u{n}@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{2}@ =@ f@ (@ x{n}@ +@ h/2@ ,@ u{n}@ +@ h@ k{1}/2@ )@ .@n
@N

@t rk3
@n
@s -1 0 0 *__current__
@15 {МЕТОД РУНГЕ-КУТТЫ 3-ГО ПОРЯДКА ТОЧНОСТИ}
@s -1 0 0 *__current__
@47 {(МЕТОД ХОЙНА).}@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 (@ u{n+1}@ -u@ {n}@ )@ /@ h@ =@ (@ k{1}@ +@ 3@ k{3})@ /@ 4@ ,@5 n@ =@ 1@ ,@ 2@ ,@ ... ,@N
@n
@s -1 0 6 small
@s -1 0 -3 small
@30 u{0}@ =@ u{0}@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{1}@ =@ f@ (@ x{n}@ ,@ u{n}@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{2}@ =@ f@ (@ x{n}@ +@ h@ /@ 3@ ,@ u{n}@ +@ h@ k{1}@ /@ 3@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{3}@ =@ f@ (@ x{n}@ +@ 2@ h@ /@ 3@ ,@ u{n}@ +@ 2@ h@ k{2}@ /@ 3@ )@ .@n
@n

@t rk4
@n
@s -1 0 0 *__current__
@20 {МЕТОД РУНГЕ-КУТТЫ 4-ГО ПОРЯДКА ТОЧНОСТИ.}@n
@N
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 (@ u{n+1}@ -@ u{n}@ )@ /@ h@ =@ (@ k{1}@ +@ 2@ k{2}@ +@ 2@ k{3}@ +k{4}@ )@ /@ 6@ ,@5 n@ =@ 1@ ,@ 2@ ,@ ...@ ,@n
@n
@s -1 0 6 small
@s -1 0 -3 small
@30 u{0}@ =@ u{0}@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{1}@ =@ f@ (@ x{n}@ ,@ u{n}@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{2}@ =@ f@ (@ x{n}@ +@ h@ /@ 2@ ,@ u{n}@ +@ h@ k{1}@ /@ 2@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{3}@ =@ f@ (@ x{n}@ +@ h@ /@ 2@ ,@ u{n}@ +@ h@ k{2}@ /@ 2@ )@ ,@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@30 k{4}@ =@ f@ (@ x{n}@ +@ h,@ u{n}@ +@ h@ k{3}@ )@ .@n

@t Ричардсон
@n
@s -1 0 0 *__current__
@30 {ЭКСТРАПОЛЯЦИЯ РИЧАРДСОНА.}@n
@n
@10 Пусть методом Рунге-Кутты порядка р, в результате выполнения
численного интегрирования на двух шагах величины h, найдено
@s -1 0 6 small
численное значение u{h}, а в результате выполнения одного шага 2h
@s -1 0 6 small
получено значение u{2h}.@2 Тогда@2 выражение@n
@n
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 6 small
@s -1 0 -3 small
@30 u'@ =@ u{h}@ +@ (@ u{h}@ -@ u{2h}@ )@ /@ (@ 2{p}@ -@ 1@ )@n
@n
аппроксимирует величину u ( x + 2h ) с порядком ( p + 1 ). Другими словами,
экстраполяция Ричардсона позволяет увеличивать на единицу точность
метода.@n


@t невязка
@N
@s -1 0 0 *__current__
@55 {НЕВЯЗКА.}@N

@t task
@N
@s -1 0 0 *__current__
@55 {ЗАДАНИЕ.}@N
@N
@10 1. Изучение поведения численных решений
@e -1 0 дифференциальная задача
[задачи Коши]
  для обыкновенного
дифференциального уравнения, полученных разными
@e -1 0 ЧИСЛЕННЫЕ МЕТОДЫ
[численными методами].@N
@10 Для одного дифференциального уравнения @N
@N
@s -1 0 6 small
@45 u{x}@ +@ A@ u@ =@ 0 ,@5 A@ =@ -3 ,@N
@N
@55 u ( 0 )@ =@ b , @N
@N
на отрезке@ @[@ 0 , 2@ @]@  получите численные решения с помощью всех указанных в меню методов,
сравните между собой и с
@e -1 0 exect1
 [точным решением]
  ( шаг интегрирования h@ =@ 0.05 ).
@N
@10 2. Проведите численное решение задачи из п.1 двумя методами
(Рунге-Кутта
@e -1 0 rk1
[1]
 -го и
@e -1 0 rk4
[4]
 -го порядка) при различных значениях шага
интегрирования h@ =@ 0.25 ,@ 0.025 .@N
@N
@10 3. Аналогичные расчеты проведите для системы из двух уравнений@N
@N
@30 u'@ =@ v@N
@N
@30 v'@ =@ -u ,@N
@N
@30 u(0)@ =@ v(0)@ =@ 1 ,@N
@N
сравните с
@e -1 0 exect2
[точным решением]
  системы ( h@ =@ 0.01 ) .@N
@N
@10 4. Получите численное решение "жесткой" системы уравнений@N
@N
@30 u'@ =@ 98u@ +@ 198v@N
@N
@30 v'@ =@ -99u@ -@ 199v@N
@N
и сравните с
@e -1 0 exect3
[точным решением] . @N
  Какой шаг интегрирования необходимо взять,
чтобы численное решение было устойчивым ?@N
@N
@10 5. Получите численное решение системы трех ОДУ химической кинетики@N
@N
@s -1 0 -3 small
@30 u'@ =@ 1@ +@ u{2}@ v@ -@ (z@ +@ 1)@ x@ @N
@N
@s -1 0 -3 small
@30 v'@ =@ u@ z@ -@ u{2}@ v@ @N
@N
@s -1 0 0 symbol
@s -1 0 0 symbol
@30 z'@ =@ -@ u@ z@ +@ {a}@10 (@ {a}@ =@ 1.5;@ 1.38;@ 1.22@ )@N
@N
двумя методами : Рунге-Кутты
@e -1 0 rk1
[1]
 -го и
@e -1 0 rk4
[4]
  -го порядка. Изучите фазовые портреты.
Удалось ли Вам получить предельные циклы и бифуркацию Хопфа (при которой
предельный цикл вырождается в точку) ?@N
@N
@10 6. Получите чияленное решение системы трех уравнений  @N
@N
@30 u'@ =@ -@ E@ u@ +@ E@ v@N
@N
@30 v'@ =@ -@ u@ z@ +@ r@ x@ -@ v@N
@N
@30 z'@ =@ u@ v@ -@ b@ z ,@N
@N
@30 u(0)@ =@ -8,@3 v(0)@ =@ 8,@3 z(0)@ =@ r@ -@ 1 ,@N
@N
@30 E@ =@ 10@ ,@3 r@ =@ 28@ ,@3 b@ =@ 10@ ,@ 8@ /@ 3@ ,@ 20@ .@N
@N
методом
@e -1 0 rk4
Рунге-Кутты [4]
 -го порядка точности. При одном из указанных
параметров Вы должны получить непериодические решения (странные
аттракторы Лоренца). Изучите поведение решений по времени и
фазовые портреты. Найдите путем численного эксперимента (и
подбора шага интегрирования) это значение. Сравните численные решения,
полученные методами Рунге-Кутты
@e -1 0 rk1
[1]
 -го и
@e -1 0 rk4
[4]
 -го порядков точности.@N
@N
@10 7. Получите траекторию движения спутника вокруг планеты, проведя
численное решение задачи двух тел@N
@N
@30 x'@ =@ z@N
@N
@30 y'@ =@ u@N
@N
@s -1 0 -3 small
@s -1 0 -3 small
@s -1 0 -3 small
@30 z'@ =@ -@ x@ /@ (x{2}@ +@ y{2}){3/2}@N
@N
@s -1 0 -3 small
@s -1 0 -3 small
@s -1 0 -3 small
@30 u'@ =@ -@ y@ /@ (x{2}@ +@ y{2}){3/2} ,@N
@N
@s -1 0 0 symbol
@s -1 0 0 symbol
@s -1 0 0 symbol
@30 0@ {г}@ t@ {г}@ 20,@5 x(0)@ =@ 0.5@5 y(0)@ =@ 0,@5 z(0)@ =@ 0,@5 u(0)@ =@ {╓}3.@N
@N
@10 Как изменяется траектория при изменении шага интегрирования ?@N
@N
@s -1 0 -3 @small
@10 8{*}.  Изучите поведение численного решения уравнения Ван-дер-Поля@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@30 y''@ +@ {e}@ (y{2}@ -@ 1)@ y'@ +@ y@ =@ 0 ,@N
@N
представленного в виде системы двух ОДУ@N
@N
@30 x'@ =@ z@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@s -1 0 0 symbol
@30 z'@ =@ {e}@ (1@ -@ x{2})@ z@ -@ x,@5 {e}@ >@ 0 ,@N
@N
@s -1 0 0 symbol
@s -1 0 0 symbol
@30 x ( 0 ) = 2 , z ( 0 ) = 0 , 0 {г} t {г} 20 @N
@N
в зависимости от изменения параметра
@s -1 0 0 symbol
@s -1 0 0 symbol
@s -1 0 0 symbol
@s -1 0 0 symbol
{e} (0.01@ {г}@ {e}@ {г}@ 100) .@N
@N
@s -1 0 -3 @small
@10 9{*}. Получите численное решение ОДУ с особенностью@N
@N
@s -1 0 0 symbol
@s -1 0 -3 small
@30 u'@ =@ 1@ /@ 2{╓}x@ +@ u{2}(x) ,@5 u(0)@ =@ 0 .@N

@t calc
@n
@s -1 0 0 *__current__
@25 {Ваша функция может содержать:}@N
@N
@s -1 0 0 *__current__
@2  - Числа, переменные, константу@3 {Pi} = 3.1415926 :@N
@N
@s -1 0 0 *__current__
@2  - {алгебраические действия:}@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {+}@2 - плюс,@48 {-}@2 - минус,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {*}@2 - умножить,@39 {/}@2 - разделить,@N
@s -1 0 0 *__current__
@8 {^}@2 - возведение в степень;@N
@N
@s -1 0 0 *__current__
@2  - {математические функции:}@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {abs}@3 - модуль,@35 {acos}  - арккосинус,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {asin}@2 - арксинус,@32 {atan}  - арктангенс,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {cos}@3 - косинус,@35 {cosh}    - косинус гиперболический,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {exp}@3 - експонента,@29 {log}   - логарифм натуральный,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {lg10}@2 - логарифм десятичный,@8 {sin}   - синус,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {sinh}@2 - синус гиперболический,@8 {sqrt}  - корень квадратный,@N
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@8 {tan}@4 - тангенс,@36 {tanh}  - тангенс гиперболический.@N
@N
@s -1 0 0 *__current__
@25 {Например:}@N
@n
@s -1 0 0 *__current__
@10 {F(x,y) = -1.5e-4 / cos( Pi * x ) + abs( lg10 ( y + 1 ))}


@t index
@n
@s -1 0 0 *__current__
@41 {Cписок тем по алфавиту :}@N
@N
@e -1 0 ВВЕДЕНИЕ.
 - [введение];@N
@e -1 0 яяintr
 - [введение к пакету];@N
@e -1 0 calc
 - [ввод функции с экрана];@N
@e -1 0 дифференциальная задача
 - [дифференциальная задача];@N
@e -1 0 task
 - [задание];@N
@e -1 0 work
 - [клавиши]@N
@e -1 0 методы Рунге-Кутты
 - [методы Рунге-Кутты];@N
@e -1 0 rk1
 - [метод Рунге-Кутты 1-го порядка];@N
@e -1 0 rk2
 - [метод Рунге-Кутты 2-го порядка (1)];@N
@e -1 0 rk22
 - [метод Рунге-Кутты 2-го порядка (2)];@N
@e -1 0 rk3
 - [метод Рунге-Кутты 3-го порядка];@N
@e -1 0 rk4
 - [метод Рунге-Кутты 4-го порядка];@N
@e -1 0 d = || u(h) ||
 - [погрешность метода];@N
@e -1 0 work
 - [работа с программой];@N
@e -1 0 разностная задача
 - [разностная задача];@N
@e -1 0 сеточная область
 - [сеточная область];@N
@e -1 0 устойчиво
 - [устойчивость];@N
@e -1 0 ВВЕДЕНИЕ.
 - [учебник];@N
@e -1 0 ЧИСЛЕННЫЕ МЕТОДЫ
 - [численные методы] ;@N
@e -1 0 Ричардсон
 - [экстраполяция Ричардсона];@N
@e -1 0 exect1
 - [задача 1];@N
@e -1 0 exect2
 - [задача 2];@N
@e -1 0 exect3
 - [задача 3];@N

@t work
@n
@s -1 0 0 *__current__
@6  {Программа использует следующие клавиши :}@N
@n
@N
@r @e -1 0 work
@3 - F1 -  вызывается данное окно помощь;@N
@3 - F2 -  контекстная помощь по пункту;@N
@3 - F3 -  вызов предыдущего окна помощи;@N
@e -1 0 index
@3 - F4 -  [список тем по алфавиту];@N
@e -1 0 task
@3 - F5 -  [учебный маршрут];@N
@3 - ESC - выход из текущего окна,выход из редактора@N
@20 без сохранения;@N
@3 - пробел - редактирование строки,где это возможно;@N
@3 - ENTER - начало счета,вход в окно нижнего уровня;@N
@20 фиксация выбранного условия либо метода,@N
@20 поставить-убрать (*)-звездочку в пункте,@N
@20 выход из редактора с сохранением строки;@N
@3 - ALT X - выход из программы.
@6 Для перемещения по окнам, редактируемой строке
используйте стрелочки и мышь.Использовать выделенные красным
цветом буквы возможно следующим образом:@n
@5 1) загрузите знакогенератор русского алфавита,@N
@5 2) переключитесь на русский алфавит,@N
@5 3) если буква заглавная, то нажмите SHIFT.@N
@t exect1
@N
@45 Задача 1 ( точное решение ) :@N
@N
@N
@54 x ( t ) = 6@ exp ( 3 t ) .@N

@t exect2
@N
@50 Задача 2 ( точное решение ) :@N
@N
@N
@s -1 0 6 small
@61 x{1} ( t ) = sin t@N
@N
@s -1 0 6 small
@61 x{2} ( t ) = cos t@N

@t exect3
@N
@44 Задача 3 ( точное решение ) :@N
@N
@N
@s -1 0 6 small
@45 x{1} = 4 exp ( - t ) - 3 exp ( -100 )@N
@n
@s -1 0 6 small
@45 x{2} = - 2 exp ( -t ) + 3 exp ( -100 )@N

@t яяintr
@s -1 0 0 *__current__
@40 {ВВОДНЫЙ@ @  КОММЕНТАРИЙ .}@N
@n
@3  Итак, Вы решили изучать курс
@s -1 0 0 *__current__
{"Основы вычислительной математики"}. @N
Надеемся, что использование пакета учебных  программ,
 созданного на кафедре вычислительной математики Московского
 физико-технического института, значительно упростит эту задачу.@N

@f l y images\popugai.*
@n
@s -1 0 0 *__current__
@10 Теоретической основой пакета служит {учебник В.С.Рябенького}
"Введение в вычислительную математику", многие годы читающего
этот курс студентам факультета управления и прикладной математики МФТИ.@N
@n
@10 Учебные демонстрационные работы дают возможность освоить
@s -1 0 0 *__current__
наиболее известные {численные методы}, традиционно  используемые
@s -1 0 0 *__current__
при решении научных и практических задач на ЭВМ,  понять {границы их}
@s -1 0 0 *__current__
{предпочтительной применимости}. Графические возможности ЭВМ
 позволяют в понятной и наглядной форме познакомиться  с характерными
 эффектами, возникающими при численном решении задач.@N
@N
@s -1 0 0 *__current__
@10 {Программная оболочка}, снабженная меню, подсказками,
теоретическими справками, графикой и т.п. позволит Вам работать
с компьютером в удобном диалоговом режиме, а изучение основ
вычислительной математики превратит не только в полезное, но и
увлекательное путешествие по этому курсу. Пакет может быть использован
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@s -1 0 0 *__current__
для проведения {лекционных}, {семинарских}, {практических занятий} на ЭВМ, а
так же как эффективное средство для самостоятельного освоения курса.@N
@n
@10 B него включены следующие лабораторные работы :@N
 - погрешности в вычислениях ;@N
 - табличное задание и интерполирование функций ;@N
 - численное интегрирование ;@N
 - численное решение систем линейных уравнений ;@N
 - переопределенные системы линейных уравнений. @N
@10 Метод наименьших квадратов ;@N
 - численное решение нелинейных уравнений и систем ;@N
 - численное решение обыкновенных дифференциальных уравнений .@N
@10 Задача Коши ;@N
 - численное решение обыкновенных дифференциальных уравнений .@N
@10 Краевая задача ;@N
 - численное решение уравнений гиперболического типа. @N
@10 Уравнение переноса ;@N
 - численное решение уравнений гиперболического типа .@N
@10 Волновое уравнение ;@N
 - численное решение уравнений параболического типа .@N
@10 Уравнение теплопроводности ;@N
 - численное решение уравнений эллиптического типа .@N
@10 Уравнение Пуассона .@N
 @N
@s -1 0 0 *__current__
@25 {НЕКОТОРЫЕ@ @  ПРАКТИЧЕСКИЕ@ @  РЕКОМЕНДАЦИИ .}@N
@N
@s -1 0 0 *__current__
@10 Выбрать {лабораторную работу} Вы сможете в меню, следующим после
заставки пакета. Работы желательно выполнять в той последовательности,
в которой они стоят.
@s -1 0 0 *__current__
Пункты {меню}, расположенные в верхней части экрана, помогут Вам
"наладить" диалог с компьютером. Каждую работу рекомендуем Вам начинать
с изучения вводной части, следующей после заставки к работе,  и пункта меню
@s -1 0 0 *__current__
{"Помощь"}, в котором описаны функциональные клавиши, рекомендуемый
@s -1 0 0 *__current__
учебный маршрут ( пункт {"Задачник"} ), даны краткие теоретические
@s -1 0 0 *__current__
сведения (пункт {"Учебник"}).Выбрать метод решения, параметры задачи,
тип выводного окна, а также запустить задачу на счет  Вы сможете через
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@s -1 0 0 *__current__
@s -1 0 0 *__current__
пункты меню {"Метод"}, {"Параметры"}, {"Окна"}, {"Запуск"}. Пункт подменю
@s -1 0 0 *__current__
{"Окно с информацией"} (ему соответствует пункт меню "Окна") убирает либо
 возвращает информацию по "текущей" задаче.Выход из меню осуществляется
@s -1 0 0 *__current__
@s -1 0 0 *__current__
при помощи пункта подменю {"Выход"} (соответствующий пункт меню {"Файлы"}).
@s -1 0 0 *__current__
Задачи, помеченные звездочкой ({*}), являются не обязательными и выполняются
по указанию преподавателя. @N
@n
@10  После "прохождения" рекомендуемого учебного маршрута, не
отказывайте себе в удовольствии поработать в "свободном" режиме,
самостоятельно выбирая методы численного решения и параметры
задач.@N
@3n
@10 Авторы желают Вам интересной и увлекательной работы, а главное -
успешного освоения курса.@N
@f m n images\m&s.*
@n
