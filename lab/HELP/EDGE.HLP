


















































































@t work
@n
@6  Программа использует следующие клавиши:@N
@n
@N
@s 14 0 0 __current__
@3 - {F1} -  вызывается данное окно помощь;@N
@s 14 0 0 __current__
@3 - {F2} -  контекстная помощь по пункту;@N
@s 14 0 0 __current__
@3 - {F3} -  вызов предыдущего окна помощи;@N
@e -1 0 index
@s 14 0 0 __current__
@3 - {F4} -  [список тем по алфавиту];@N
@e -1 0 task
@s 14 0 0 __current__
@3 - {F5} -  [учебный маршрут];@N
@s 14 0 0 __current__
@3 - {ESC} - выход из текущего окна, выход из редактора@N
@17 без сохранения;@N
@s 14 0 0 __current__
@3 - {пробел} - редактирование строки,где это возможно;@N
@s 14 0 0 __current__
@3 - {ENTER} - начало счета, вход в окно нижнего уровня;@N
@22 фиксация выбранного условия либо метода,@N
@22 поставить-убрать (*) - звездочку в пункте,@N
@22 выход из редактора с сохранением строки;@N
@s 14 0 0 __current__
@3 - {ALT X} - выход из программы.@N
@N
@10 Для перемещения по окнам, редактируемой строке, для выхода из пошагового
режима счета используйте стрелочки и мышь.Использовать выделенные красным
цветом буквы возможно следующим образом:@N
@10 1) загрузите знакогенератор русского алфавита,@N
@10 2) переключитесь на русский алфавит,@N
@10 3) если буква заглавная, то нажмите SHIFT.@N

@t index
@N
@s 14 0 0 __current__
@35 {СПИСОК  ТЕМ  ПО  АЛФАВИТУ :}@N
@N
@e -1 0 index
@4 - [ИНДЕКС]  -  это  то, что  Вы  сейчас  видите @N
@e -1 0 task
@4 - [УЧЕБНЫЙ МАРШРУТ] @N
@e -1 0 work
@4 - [РАБОТА С КЛАВИАТУРОЙ] @N
@e -1 0 ВВЕДЕНИЕ
@4 - [ВВЕДЕНИЕ] @N
@e -1 0 ВОССТАНОВЛЕНИЕ ЭКРАНА
@4 - [ВОССТАНОВЛЕНИЕ ЭКРАНА] @N
@e -1 0 ВЫХОД
@4 - [ВЫХОД] @N
@e -1 0 ВЫЧИСЛИТЕЛЬНАЯ НЕУСТОЙЧИВОСТЬ ЗАДАЧИ КОШИ
@4 - [ВЫЧИСЛИТЕЛЬНАЯ НЕУСТОЙЧИВОСТЬ ЗАДАЧИ КОШИ] @N
@e -1 0 ЗАГРУЗКА ЗАДАЧИ
@4 - [ЗАГРУЗКА ЗАДАЧИ] @N
@e -1 0 ИМЯ ФАЙЛА
@4 - [ИМЯ ФАЙЛА] @N
@e -1 0 КОНЕЧНО - РАЗНОСТНЫЙ МЕТОД
@4 - [КОНЕЧНО - РАЗНОСТНЫЙ МЕТОД] @N
@e -1 0 ЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
@4 - [ЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА] @N
@e -1 0 МЕТОД ДЕЛЕНИЯ ОТРЕЗКА ПОПОЛАМ
@4 - [МЕТОД ДЕЛЕНИЯ ОТРЕЗКА ПОПОЛАМ] @N
@e -1 0 МЕТОД ЛИНЕАРИЗАЦИИ
@4 - [МЕТОД ЛИНЕАРИЗАЦИИ]@N
@e -1 0 МЕТОД НЬЮТОНА
@4 - [МЕТОД НЬЮТОНА]@N
@e -1 0 МЕТОД СТРЕЛЬБЫ
@4 - [МЕТОД СТРЕЛЬБЫ] @N
@e -1 0 МЕТОД ЧИСЛЕННОГО ПОСТРОЕНИЯ ОБЩЕГО РЕШЕНИЯ
@4 - [МЕТОД ЧИСЛЕННОГО ПОСТРОЕНИЯ ОБЩЕГО РЕШЕНИЯ] @N
@e -1 0 МЕТОДЫ РЕШЕНИЯ КРАЕВЫХ ЗАДАЧ
@4 - [МЕТОДЫ РЕШЕНИЯ КРАЕВЫХ ЗАДАЧ] @N
@e -1 0 НЕЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
@4 - [НЕЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА] @N
@e -1 0 ОКНО ИНФОРМАЦИИ
@4 - [ОКНО ИНФОРМАЦИИ] @N
@e -1 0 РЕДАКТИРОВАНИЕ ПАРАМЕТРОВ
@4 - [РЕДАКТИРОВАНИЕ ПАРАМЕТРОВ] @N
@e -1 0 СОХРАНЕНИЕ ЗАДАЧИ
@4 - [СОХРАНЕНИЕ ЗАДАЧИ] @N
@e -1 0 СОХРАНЕНИЕ ЭКРАНА
@4 - [СОХРАНЕНИЕ ЭКРАНА] @N
@e -1 0 СЧЕТ
@4 - [СЧЕТ] @N
@N
@t ИМЯ ФАЙЛА
@n
@6 Наберите имя файла
@2 ( например
@s 14 0 0 __current__
@1 {me_file.pcx})
и нажмите клавишу
@s 14 0 0 __current__
{ENTER}.@N
 После этого с вашим файлом выполнится желаемое действие.@N

@t ВОССТАНОВЛЕНИЕ ЭКРАНА
@n
@s 14 0 0 __current__
@6 Нажав {ENTER} Вы восстановите экран при его повреждении вследствие @n
вирусов или резидентных программ.@N


@t ВЫХОД
@n
@6 Жмите
@s 14 0 0 __current__
@1 {ENTER}
@1 и решайте : выходить или нет.@N

@t ОКНО ИНФОРМАЦИИ
@n
@6 Окно с информацией позволит Вам наблюдать за изменением текущих@n
параметров:  метода, функции, шага , точности , и т.д..@N

@t СОХРАНЕНИЕ ЭКРАНА
@n
@s 14 0 0 __current__
@3 После нажатия {ENTER} @N
Вы можете сохранить весь экран (графики, информацию и т.п.) на диске.@n
@s 14 0 0 __current__
@1 После этого нажмите {SPACE} и отредактируйте имя файла. Затем нажмите @n
@s 14 0 0 __current__
@s 14 0 0 __current__
{ENTER} и {ENTER}. После этого экран будет сохранен на диске. @N

@t СЧЕТ
@n
@6 Нажав эту клавишу , Вы запускаете программу на счет.@N
@2 Дальше все зависит от вас.@N

@t ЗАГРУЗКА ЗАДАЧИ
@n
@s 14 0 0 __current__
@3 После нажатия {ENTER} @N
Вы можете загрузить задачу (т.е. метод, функции и прочие параметры) на диске.@n
@s 14 0 0 __current__
@1 После этого нажмите {SPACE} и отредактируйте имя файла. Затем нажмите @n
@s 14 0 0 __current__
@s 14 0 0 __current__
{ENTER} и {ENTER}. После этого задача будет считана с диска. @N

@t СОХРАНЕНИЕ ЗАДАЧИ
@n
@s 14 0 0 __current__
@3 После нажатия {ENTER} @N
Вы можете сохранить задачу (т.е. метод, функции и прочие параметры) на диске.@n
@s 14 0 0 __current__
@1 После этого нажмите {SPACE} и отредактируйте имя файла. Затем нажмите @n
@s 14 0 0 __current__
@s 14 0 0 __current__
{ENTER} и {ENTER}. После этого задача будет сохранена на диске. @N

@t task
@N
@10 Войдя в работу, познакомьтесь предварительно с краткой @n
@e -1 0 МЕТОДЫ РЕШЕНИЯ КРАЕВЫХ ЗАДАЧ
@1 [теоретической справкой]. Это поможет Вам более полно использовать@n
возможности лабораторной работы.@N
@e -1 0 ЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
@10 Начните выполнение работы с темы [линейная краевая задача]@n
Выбрав с помощью меню один из методов решения линейной краевой@n
задачи перейдите к пункту меню - параметры. Наберите следующую@n
краевую задачу
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@35  {y}{ //}{ - p}{y = p},@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 0 __current__
@35  {y (0) = 1}@10 { y (1) = 1}@N
@N
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
для  {p = conct, p > 0}. Решением этой задачи является фукция  {y}{@1 ║@1 }{1}@n
Найдите решение этой задачи методом построения общего решения и @n
@s 14 0 0 __current__
методом прогонки для разных  {p}, начиная с умеренных значений и@n
@s 14 0 0 __current__
увеличивая их до величины порядка  {1200}. Сравните получаемые ре-@n
шения с точным и объясните наблюдаемые эффекты. Попытайтесь найти@n
решение этой же задачи методом стрельбы. Проанализируйте, как влияет@n
@s 14 0 0 __current__
при разных  {p}  точность задания недостающего начального условия на@n
левом конце интервала на успешное решение задачи методом стрельбы.@n
Объясните полученные результаты. Замените левое краевое условие на@n
@s 14 0 0 __current__
какое-нибудь другое, например, такое {y (0) = 0} и проделайте все@n
вышесказанное. Замените правое краевое условие и посмотрите, как из-@n
менится характер решения. Испробуйте эти методы на других линейных@n
краевых задачах, которые вы можете задать сами. В качестве примеров@n
нелинейных задач можно предложить следующие задачи:@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@35  {y}{ //}{ + p*x*cos (y) = 0,}@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {y}{ /}{(0) = 0@10  y (1) = 0@10 p = 1, 4, 7}@N
@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@35  {y}{ //}{ + 0.5 / (1-0.5*y)*(y}{ /}{)}{2}{ = 0},@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y(0) = y}{0}{@10 y (1) = 0}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y}{0}{ = 0.25, 0.5, 1, 1.5, 1.8, 1.9, 1.95}@N
@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y}{ //}{ + sin (y) = 0},@10 {0 }{г}{ x }{г}{ x}{k}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y(0) = 0@10  y (x}{k}{) = }{p}{@10 x}{k}{ = 0.5, 1, 2, 4, 6}@N
@N
@t ВВЕДЕНИЕ
@N
@s 14 0 0 __current__
@40  {ВВЕДЕНИЕ}@N
@N
@10 Эта работа ставит своей целью познакомить Вас с различ-@n
@e -1 0 МЕТОДЫ РЕШЕНИЯ КРАЕВЫХ ЗАДАЧ
ными [методами решения] линейных и нелинейных краевых задач.@n
Отличие краевой задачи от задачи Коши (задачи с начальными@n
условиями) состоит в том, что решение дифференциального@n
уравнения должно удовлетворять граничным условиям, связывающим@n
значения искомой функции более чем в одной точке.@N
@10 Простейшим представителем краевой задачи является двух-@n
точечная граничная задача, для которой граничные условия задаются@n
в двух точках, как правило, на концах интервала, на котором ищется@n
решение. Двухточечные граничные задачи встречаются во всех областях@n
науки и техники. На примере таких задач  и будет рассмотрено@n
применение методов, обсуждаемых в настоящей работе. В случае задания@n
краевых условий в более общем виде использование этих методов не@n
представит принципиальных затруднений.@N
@t МЕТОДЫ РЕШЕНИЯ КРАЕВЫХ ЗАДАЧ
@N
@s 14 0 0 __current__
@40  {МЕТОДЫ  РЕШЕНИЯ  КРАЕВЫХ  ЗАДАЧ}@N
@N
@10 Примером двухточечной краевой задачи является задача@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(1)@30  {y}{ //}{= f ( x, y, y}{ /}{),}@30 {0 }{г}{ x }{г}{ 1,}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0)=Y}{0}@10 {y (1)=Y}{1}@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
с граничными условиями на обоих концах отрезка {0 }{г}{ x }{г}{ 1},@n
@s 14 0 0 __current__
на котором надо найти решение  {y = y (x)}. На этом примере мы схема-@n
тически изложим некоторые способы численного решения краевых задач.@n
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 -3 small
@10 Если функция {f (x, y, y}{ /}{)} в (1) линейна относительно {y} и {y}{ /}, то@n
@e -1 0 ЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
@e -1 0 НЕЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
мы имеем [линейную краевую задачу], иначе - [нелинейную краевую задачу].@N
@N
@t ЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
@N
@s 14 0 0 __current__
@40  {ЛИНЕЙНАЯ  КРАЕВАЯ  ЗАДАЧА}@N
@N
@10 Рассмотрим частную, но довольно распространенную краевую задачу@n
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@35  {Ly = y}{ //}{ - p (x) y = f (x)}@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0) = Y}{0}@10 { y (1) = Y}{1}@N
@N
@10 Для этой задачи проиллюстрируем два способа решения: один@n
@e -1 0 МЕТОД ЧИСЛЕННОГО ПОСТРОЕНИЯ ОБЩЕГО РЕШЕНИЯ
основан на идее [численного построения общего решения] линейного@n
@e -1 0 КОНЕЧНО - РАЗНОСТНЫЙ МЕТОД
дифференциального уравнения, другой, [конечно - разностный] (метод@n
прогонки), сводит исходную дифференциальную краевую задачу к системе@n
линейных алгебраических уравнений, решение которых находится методом@n
прогонки.@N
@N
@t МЕТОД ЧИСЛЕННОГО ПОСТРОЕНИЯ ОБЩЕГО РЕШЕНИЯ
@N
@s 14 0 0 __current__
@20  {МЕТОД  ЧИСЛЕННОГО  ПОСТРОЕНИЯ  ОБЩЕГО  РЕШЕНИЯ}@N
@N
@10 Для нахождения решения краевой задачи@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(1)@30  {Ly = y}{ //}{ - p (x) y = f (x)}@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0) = Y}{0}@10 { y (1) = Y}{1}@N
@N
можно численно построить общее решение дифференциального уравнения,@n
представимое в виде:@N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y (x) = C}{1}{y}{1}{(x) + C}{2}{y}{2}{(x) + y}{0}{(x)}@N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
где  {y}{0}{(x)} - какое-либо решение неоднородного уравнения@n
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
{y}{ //}{ - p (x) y = f (x)}, а {y}{1}{(x)} и {y}{2}{(x)} два любые линейно независимые@n
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
решения однородного уравнения {y}{ //}{ - p (x) y=0}. Постоянные {C}{1}@n
@s 14 0 0 __current__
@s 14 0 4 small
и {C}{2} находятся из граничных условий задачи (1).@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@10 Так как решения  {y}{0}{ (x),  y}{1}{ (x),  y}{2}{ (x)}  достаточно произвольны,@n
то их можно построить различными способами. Задать какие-то начальные@n
условия и решить одну задачу Коши для неоднородного и две задачи Коши@n
для однородного уравнений. Эти условия могут быть, например, такими:@n
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {y}{0}{ (0) = 0,  y}{0}{ /}{ (0) = 0;}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {y}{1}{ (0) = 1,  y}{1}{ /}{ (0) = 0;}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {y}{2}{ (0) = 0,  y}{2}{ /}{ (0) = 1.}@N
@N
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 __current__
@10 Однако при реализации этого способа, например, при@2 {p (x) }{╗}{ 1}@n
(для нашего уравнения) могут возникнуть трудности, связанные@n
@e -1 0 ВЫЧИСЛИТЕЛЬНАЯ НЕУСТОЙЧИВОСТЬ ЗАДАЧИ КОШИ
с [вычислительной неустойчивостью задачи Коши]. В этом случае можно@n
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
попытаться построить  {y}{0}{ (x), y}{1}{ (x), y}{2}{ (x)} с помощью решения@n
одной краевой задачи для неоднородного уравнения и двух краевых задач@n
для однородного уравнения. Краевые условия для этих задач могут быть,@n
например, следующими:@N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y}{0}{ (0) = 0,  y}{0}{ (1) = 0;}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y}{1}{ (0) = 1,  y}{1}{ (1) = 0;}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {y}{2}{ (0) = 0,  y}{2}{ (1) = 1.}@N
@N
@e -1 0 КОНЕЧНО - РАЗНОСТНЫЙ МЕТОД
Эти задачи могут быть решены [методом прогонки]. Условия применимости@n
@s 14 0 0 __current__
метода прогонки при   {p@1 (x)@1 >@1 0}, как легко проверить,@n
выполнены. Этот подход может оказаться полезным, если краевые условия@n
таковы, что для исходной задачи метод прогонки применен быть не может@n
@10 Отметим, что с учетом специфики краевых условий исходной задачи@n
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
можно строить общее решение вида  {y (x) = y}{0}{ (x) + Cy}{1}{ (x)}, где  {y}{0}{ (x)} -@n
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
некоторое решение неоднородного уравнения, а  {y}{1}{ (x)} - некоторое@n
решение однородного уравнения.@N
@N
@t КОНЕЧНО - РАЗНОСТНЫЙ МЕТОД
@N
@s 14 0 0 __current__
@20  {КОНЕЧНО - РАЗНОСТНЫЙ  МЕТОД  (МЕТОД  ПРОГОНКИ)}@N
@N
@10 При нахождении решения линейной краевой задачи@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@35  {y}{ //}{ - p (x) y = f (x)}@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0) = Y}{0}@10 { y (1) = Y}{1}@N
@N
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 __current__
@e -1 0 МЕТОД ЧИСЛЕННОГО ПОСТРОЕНИЯ ОБЩЕГО РЕШЕНИЯ
для@2 {p (x) }{╗}{ 1}@2 [методом построения общего решения], если оно находится@n
с помощью решения задач Коши, могут возникнуть трудности, связанные@n
@e -1 0 ВЫЧИСЛИТЕЛЬНАЯ НЕУСТОЙЧИВОСТЬ ЗАДАЧИ КОШИ
с [вычислительной неустойчивостью задачи Коши]. Для решения поставленной@n
задачи можно воспользоваться разностной схемой@N
@N
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 11 small
@35  {y}{ m + 1}{ - 2y}{ m}{ + y}{ m - 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@35  {--------------------------  -  p (x}{ m}{) y}{ m}{ = f (x}{ m}{),}@N
@s 14 0 -6 __current__
@s 14 0 -9 small
@35  {@12 h}{2}@N
@s 14 0 0 __current__
@35  {0@1 <@1 m@1 <@1 M,@6 Mh@1 =@1 1,}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y}{0}{@1 =@1 Y}{0}{,@12 y}{M}{@1 =@1 Y}{1}@N
@N
и решить разностную задачу методом прогонки. Условия применимости@n
@s 14 0 0 __current__
метода прогонки при   {p@1 (x)@1 >@1 0}, как легко проверить,@n
выполнены.@N
@N
@t НЕЛИНЕЙНАЯ КРАЕВАЯ ЗАДАЧА
@N
@s 14 0 0 __current__
@30  {НЕЛИНЕЙНАЯ  КРАЕВАЯ  ЗАДАЧА}@N
@N
@10 Краевая задача@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(1)@30  {y}{ //}{= f ( x, y, y}{ /}{),}@30 {0 }{г}{ x }{г}{ 1,}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0)=Y}{0}@10 {y (1)=Y}{1}@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
является нелинейной краевой задачей, если функция {f ( x, y, y}{ /}{ )}@n
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 -3 small
нелинейна относительно хотя бы одного из аргументов {y} или {y}{ /}.@n
@10 В настоящей работе реализованы два способа решения нелинейных @n
@e -1 0 МЕТОД СТРЕЛЬБЫ
@e -1 0 МЕТОД ЛИНЕАРИЗАЦИИ
краевых задач: один - это [метод стрельбы], другой - [метод линеаризации]@n
(метод Ньютона) который сводит решение нелинейной краевой задачи@n
к решению серии линейных краевых задач.@N
@N
@t МЕТОД СТРЕЛЬБЫ
@N
@s 14 0 0 __current__
@40  {МЕТОД  СТРЕЛЬБЫ}@N
@N
@10 Метод стрельбы для решения краевщй задачи@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(1)@30  {y}{ //}{= f ( x, y, y}{ /}{),}@30 {0 }{г}{ x }{г}{ 1,}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0)=Y}{0}@10 {y (1)=Y}{1}@N
@N
базируется на том, что имеются удобные способы численного решения@n
задачи Коши, т.е. задачи вида:@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(2)@30  {y}{ //}{= f ( x, y, y}{ /}{),}@30 {0 }{г}{ x }{г}{ 1,}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@35  {y (0)=Y}{0}@10 {y}{ /} {(0)=tg}{ a},@N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
где {Y}{0} - ордината точки {( 0, Y}{0}{ )}, из которой выходит@n
@s 14 0 0 symbol
интегральная кривая, а {a} - угол наклона интегральной кривой к@n
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
оси {Ox} при выходе из точки {( 0, Y}{0}{ )} (рис. 1). При фикси-@n
@f l n .\images\edge1_?.pcc
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 __current__
рованном {Y}{0} решение задачи (2) имеет вид  {y = y (x, }{a}{)}. При {x = 1}@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
решение {y (x, }{a}{)} зависит только от  {a}:@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@35  {y (x, }{a}{)|}{x=1}{ = y (1, }{a}{)}.@N
@N
@10 Используя указанное замечание о решении задачи Коши (2),@n
мы можем теперь переформулировать задачу (1) следующим образом:@n
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 -3 small
найти такой угол {a}{ = }{a}{*}, при котором интегральная кривая,@n
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
выходящая из точки {(0, Y}{0}{)} под углом {a} к оси абсцисс, попадет@n
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
в точку {(1, Y}{1}{)}:@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 4 small
(3)@30  {y (1, }{a}{) = Y}{1}.@N
@N
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 -3 small
Решение задачи (2) при этом {a}{ = }{a}{*} совпадает с искомым решением@n
задачи (1). Дело сводится, таким образом, к решению уравнения (3)@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(рис. 2). Уравнение (3) есть уравнение вида {F (}{a}{ ) = 0}, где@n
@f l n .\images\edge2_?.pcc
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 4 small
{F (}{a}{ ) = y (1, }{a}{ ) - Y}{1}. Оно отличается от привычных уравнений@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
лишь тем, что функция {F (}{a}{ )} задана не аналитическим выражением,@n
а с помощью алгоритма решения задачи (2).@N
@10 Для решения уавнения (3) можно использовать любой метод,@n
пригодный для уточнения корней нелинейного уравнения, например,@n
@e -1 0 МЕТОД ДЕЛЕНИЯ ОТРЕЗКА ПОПОЛАМ
@e -1 0 МЕТОД НЬЮТОНА
[метод деления отрезка пополам], [метод Ньютона] (касательных) и др.@n
Метод Ньютона здесь предпочтительнее ввиду высокой стоимости@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
вычисления одного значения функции {F (}{a}{ )} (нужно решить задачу@n
@s 14 0 0 symbol
Коши (2) с данным {a}).@N
@10 Метод стрельбы, сводящий решение краевой задачи (1) к вычислению@n
решений задачи Коши (2), хорошо работает в том случае, если решение@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
{y (x, }{a}{)} "не слишком сильно" зависит от {a}. В противном случае@n
@e -1 0 ВЫЧИСЛИТЕЛЬНАЯ НЕУСТОЙЧИВОСТЬ ЗАДАЧИ КОШИ
он становится [вычислительно неустойчивым], даже если решение задачи@n
(1) зависит от входных данных "умеренно".@N
@N
@t МЕТОД ДЕЛЕНИЯ ОТРЕЗКА ПОПОЛАМ
@N
@s 14 0 0 __current__
@35  {МЕТОД  ДЕЛЕНИЯ  ОТРЕЗКА  ПОПОЛАМ}@N
@N
@10 При использовании метода деления отрезка пополам мы задаем@n
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 symbol
@s 14 0 4 small
{a}{0}@5  и@5  {a}{1}@5 так, чтобы разности@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (1, }{a}{0}{ ) - Y}{1}@5  и@5  {y (1, }{a}{1}{ ) - Y}{1}@N
@N
имели разные знаки. Затем полагаем@N
@N
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@35  {a}{2}{ = (}{a}{0}{ + }{a}{1}{) / 2}.@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
Вычисляем {y (1, }{a}{2}{)}. Вычисляем затем  {a}{3}  по одной из формул@n
@N
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@35  {a}{3}{ = (}{a}{1}{ + }{a}{2}{) / 2}@5 или@5 {a}{3}{ = (}{a}{0}{ + }{a}{2}{) / 2}@N
@N
в зависимости от того, имеют ли разности@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (1, }{a}{2}{) - Y}{1}@5 и@5 {y (1, }{a}{1}{) - Y}{1}@N
@N
соответственно разные или одинаковые знаки. Затем вычисляем@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
{y (1, }{a}{3}{)}. Процесс продолжается до тех пор, пока не будет@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 symbol
достигнута@4 требуемая@4 точность,@4 {|y (1, }{a}{n}{) - Y}{1}{|}{ < }{e}.@N
@N
@t МЕТОД НЬЮТОНА
@N
@s 14 0 0 __current__
@45  {МЕТОД  НЬЮТОНА}@N
@N
@s 14 0 0 symbol
@s 14 0 4 small
@10 В случае использования метода НЬЮТОНА задаем@4 {a}{0}, а затем@n
@s 14 0 0 symbol
@s 14 0 4 small
последующие@4 {a}{n}@4 вычисляем по рекурентной формуле@N
@N
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@35  {a}{n + 1}{ = }{a}{n}{ - F (}{a}{n}{) / F}{ /}{ (}{a}{n}{)},@4 {n = 0, 1, ...}  @N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
Производная@4 {F}{ /}{ (}{a}{n}{)} может быть вычислена по одной из формул@n
численного дифференцирования, например, первого порядка аппроксимации@n
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 4 small
@s 14 0 0 __current__
@35  {F}{ /}{ (}{a}{n}{) = (F (}{a}{n}{ + h) - F (}{a}{n}{)) / h}.@N
@N
@s 14 0 0 __current__
При выборе шага@4 {h}@4 следует учесть опыт лабораторной работы@n
по погрешностям вычислений данного цикла работ.@N

@t ВЫЧИСЛИТЕЛЬНАЯ НЕУСТОЙЧИВОСТЬ ЗАДАЧИ КОШИ
@N
@s 14 0 0 __current__
@25  {ВЫЧИСЛИТЕЛЬНАЯ  НЕУСТОЙЧИВОСТЬ  ЗАДАЧИ  КОШИ}@N
@N
@10 Поясним причину возникновения вычислительной неустойчивости@n
на примере следующей линейной краевой задачи:@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(1)@30  {y}{ //}{ - p}{2}{y = 0},@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0) = Y}{0}@10 { y (1) = Y}{1}@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
при постоянном {p}{2}. Выпишем решение этой задачи:@N
@N
@s 14 0 8 __current__
@s 14 0 0 small
@s 14 0 8 __current__
@s 14 0 0 small
@s 14 0 8 __current__
@s 14 0 0 small
@s 14 0 8 __current__
@s 14 0 0 small
@48  {e}{-px}{ - e}{-p(2 - x)}@10 {e}{-p(1 - x)}{ - e}{-p(1 + x)}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (x) = -------------------  Y}{0}{ + ------------------------  Y}{1}@N
@s 14 0 -6 __current__
@s 14 0 -9 small
@s 14 0 -6 __current__
@s 14 0 -9 small
@50  {1 - e}{-2p}@24 {1 -e}{-2p}
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
Коэффициенты при  {Y}{0}  и  {Y}{1}  с ростом  {p}  остаются ограниченными@n
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 __current__
на отрезке   {0 }{г}{ x }{г}{ 1}  функциями; при всех  {p > 0}  они не превос-@n
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
ходят единицу. Поэтому небольшие ошибки при задании  {Y}{0}  и   {Y}{1}@n
ведут к столь же небольшим погрешностям в решении. Рассмотрим@n
теперь задачу Коши@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(2)@30  {y}{ //}{ - p}{2}{y = 0},@10 {0 }{г}{ x }{г}{ 1}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@35  {y (0) = Y}{0}@10 { y (1) = tg}{ a}@N
@N
Ее решение имеет вид@N
@N
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 7 symbol
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 7 symbol
@47  {pY}{0}{ + tg}{ a}@13 {pY}{0}{ - tg}{ a}@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@35  {y (x) = ----------------  e}{px}{ + ---------------- e}{-px}@N
@s 14 0 -8 __current__
@s 14 0 -8 __current__
@52 {2p}@24 {2p}@N
@N
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 symbol
Если при задании   {tg}{ a}   допущена погрешность   {e},   то значение@n
@s 14 0 0 __current__
решения при   {x = 1}   получит приращение:@N
@N
@s 14 0 7 symbol
@s 14 0 7 symbol
@49 {e}@12 {e}@N
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
(3)@30  {D}{y(1) = --- e}{p}{@2 -@2 --- e}{- p}@N
@s 14 0 -8 __current__
@s 14 0 -8 __current__
@48  {2p}@10 {2p}@N
@N
@s 14 0 0 __current__
@10 При больших   {p}   вычитаемое в равенстве  (3)  пренебрежимо@n
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
мало, но коэффициент при   {e}   в первом слагаемом   {e}{p}{ / (2p)}  становится@n
большим. Поэтому метод стрельбы при решении задачи  (1),  будучи@n
@s 14 0 0 __current__
формально приемлемой процедурой, при больших  {p}  становится прак-@n
тически непригодным.@N
@N

@t РЕДАКТИРОВАНИЕ ПАРАМЕТРОВ
@N
@s 14 0 0 __current__
@30  {РЕДАКТИРОВАНИЕ ПАРАМЕТРОВ}@N
@N
@6 Любое меню, в котором его часть выделена рамкой, можно редактировать. @n
@s 14 0 0 __current__
Для этого нажмите {SPACE} и отредактируйте техт используя стандартные клавиши.@N
@s 14 0 0 __current__
После этого нажмите {ENTER}. Параметр отредактирован!@N
В процесе редактирования Вы можете восстановить старый техт.@n
@s 14 0 0 __current__
Для этого нажмите {ESC}. Меню вернется в прежнее состояние. @N
@N
@N
@6 Вы можете редактировать следующие параметры: @N
@s 14 0 0 __current__
@s 14 0 0 __current__
{t(x)} - коеффициент при {y'} @N
@s 14 0 0 __current__
@s 14 0 0 __current__
{p(x)} - коеффициент при {y} @N
@s 14 0 0 __current__
@s 14 0 0 __current__
{q(x)} - свободный член уравнения {y''+q(x)*y'+p(x)*y+q(x)=0} @N
@N
@s 14 0 0 __current__
@s 14 0 0 __current__
{f(x,y,y')} - правая часть уравнения {y''=f(x,y,y')}@N
@s 14 0 0 __current__
{y0(x)} - начальное приближение при линеаризации нелинейного уравнения @N
@N
@s 14 0 0 __current__
@6 Выражение для функции пишется по правилам языка {BASIC}.@n
В нем могут быть следующие функции:@N
@s 14 0 0 __current__
{acos} - арккосинус @N
@s 14 0 0 __current__
{asin} - арксинус @N
@s 14 0 0 __current__
{atan} - арктангенс @N
@s 14 0 0 __current__
{tanh} - гиперболический тангенс @N
@s 14 0 0 __current__
{sqrt} - квадратный корень @N
@s 14 0 0 __current__
{cosh} - гиперболический косинус @N
@s 14 0 0 __current__
{sinh} - гиперболический синус @N
@s 14 0 0 __current__
{lg10} -  десятичный логарифм @N
@s 14 0 0 __current__
{cos} - косинус @N
@s 14 0 0 __current__
{exp} - экспонента @N
@s 14 0 0 __current__
{abs} - модуль числа @N
@s 14 0 0 __current__
{log} - натуральный логарифм @N
@s 14 0 0 __current__
{sin} - синус @N
@s 14 0 0 __current__
{tan} - тангенс @N
@s 14 0 0 __current__
{x^y} - x в степени y @N
@N
@s 14 0 0 __current__
@10 Пример: {f(x,y,y')=sin(x)+.4*log(y*y')+10.4*x^y'} @N
@N
@6 Остальные параметры: @N
@s 14 0 0 __current__
{A} - левая граница отрезка на котором поставлена задача @N
@s 14 0 0 __current__
{B} - правая граница отрезка на котором поставлена задача @N
@s 14 0 0 __current__
{a1,a0,ac} - коеффициенты левого граничного условия@N
@s 14 0 0 __current__
@13 {a1*y'(A)+a0*y(A)+ac=0}@N
@s 14 0 0 __current__
{b1,b0,bc} - коеффициенты правого граничного условия@N
@s 14 0 0 __current__
@13 {b1*y'(B)+b0*y(B)+bc=0}@N
@s 14 0 0 __current__
{y0} - начальное значение функции в методе стрельбы @N
@s 14 0 0 __current__
{y'0} - начальное значение производной в методе стрельбы @N
@s 14 0 0 __current__
{N} - число интервалов на которые разбивается отрезок при расчете @N
@s 14 0 0 __current__
{eps} - Среднеквадратичное отклонение последней итерации от предыдущей @n
@7 при котором заканчивается итерационный процесс @N

@t МЕТОД ЛИНЕАРИЗАЦИИ
@N
@s 14 0 0 __current__
@30  {МЕТОД ЛИНЕАРИЗАЦИИ  ( МЕТОД НЬЮТОНА )}@N
@N
@10 Метод Ньютона сводит решение нелинейной краевой задачи к@n
решению серии линейных краевых задач и состоит в следующем.@n
Пусть для нелинейной краевой задачи@N
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
(1)@30  {y}{ //}{= f ( x, y, y}{ /}{),}@30 {0 }{г}{ x }{г}{ 1,}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 small
@35  {y (0)=Y}{0}@10 {y (1)=Y}{1}@N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
известна некоторая функция   {y}{0}{ (x)},  удовлетворяющая граничным@n
@s 14 0 0 __current__
условиям и грубо приближенно равная искомому решению   {y (x)}. Положим@n
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
(2)@30  {y (x) = y}{0}{ (x) + v (x)},@N
@N
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
где   {v (x)} - поправка к нулевому приближению   {y}{0}{ (x)}. Подставим@n
(2)  в уравнение  (1)  и линеаризуем задачу, используя равенства@n
@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {y}{ //}{ (x) = y}{0}{ //}{ (x) + v}{ //}{ (x)},@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {f (x, y}{0}{ + v, y}{0}{ /}{ + v}{ /}{) = f (x, y}{0}{, y}{0}{ /}{) +}@N
@s 14 0 7 symbol
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 11 @small
@s 14 0 4 small
@s 14 0 7 __current__
@s 14 0 7 symbol
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 11 @small
@s 14 0 4 small
@s 14 0 7 __current__
@35  {@3 ╢}{@1 f@1 (x,@1 y}{0}{,@1 y}{0}{@1 /}{)}{@7 ╢}{@1 f@1 (x,@1 y}{0}{,@1 y}{0}{@1 /}{)}@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@35  {+@1 ----------------@1 v@1 +@1 ---------------- @1 v}{@1 /}{@1 +@1 O@1 (v}{2}{@1 +@1 |v}{@1 /}{|}{2}{)}.@N
@s 14 0 -8 symbol
@s 14 0 -8 __current__
@s 14 0 -8 symbol
@s 14 0 -8 __current__
@s 14 0 -11 small
@35  {@10 ╢@1 }{y}{@22 ╢@1 }{y}{@1 /}@N
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
Отбрасывая остаточный член  {O (v}{2}{ + |v}{ /}{|}{2}{)}, получим линейную@n
@s 14 0 -1 @small
@s 14 0 0 __current__
краевую задачу для нахождения поправки  {~}{v (x)}:@N
@N
@s 14 0 -1 @small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -1 @small
@s 14 0 0 __current__
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 -1 @small
@s 14 0 0 __current__
(3)@30  {~}{v}{ //}{ = p (x)@1 }{~}{v}{ /}{ + q (x)@1 }{~}{v + r (x)},@N
@s 14 0 -1 @small
@s 14 0 0 __current__
@s 14 0 -1 @small
@s 14 0 0 __current__
@35  {~}{v (0) = }{~}{v (1) = 0},@N
где@N
@s 14 0 7 symbol
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 11 @small
@s 14 0 4 small
@s 14 0 7 __current__
@s 14 0 7 symbol
@s 14 0 7 __current__
@s 14 0 11 small
@s 14 0 7 __current__
@s 14 0 11 @small
@s 14 0 4 small
@s 14 0 7 __current__
@35  {@12 ╢@1 }{f@1 (x, y}{0}{,@1 y}{0}{@1 /}{)}{@19 ╢@1 }{f@1 (x,y}{0}{,@1 y}{0}{@1 /}{)}@N
@s 14 0 0 __current__
@35  {p@1 (x)@1 =@1 ----------------@1 ,@6 q@1 (x)@1 =@1 ----------------@1 .}@N
@s 14 0 -8 symbol
@s 14 0 -8 __current__
@s 14 0 -11 small
@s 14 0 -8 symbol
@s 14 0 -8 __current__
@35  {@19 ╢@1 }{y}{@1 /}{@32 ╢@1 }{y}@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 @small
@s 14 0 -3 small
@35  {r@1 (x)@1 =@1 f@1 (x,@1 y}{0}{,@1 y}{0}{@1 /}{)}{@1 -@1 y}{0}{@1 //}.@N
@N
@10 Решая линейную краевую задачу  (3)  каким-либо численным методом,@n
@s 14 0 -1 @small
@s 14 0 0 __current__
найдем поправку  {~}{v}  и примем @N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 -1 @small
@s 14 0 0 __current__
@35  {y}{1}{@1 (x)@1 }{║@1 }{y}{0}{@1 (x)@1 +@1 }{~}{v}@N
@N
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
@s 14 0 0 __current__
@s 14 0 4 small
@s 14 0 0 __current__
за следующее приближение. Приняв за  {y}{0}{ (x)}, функцию  {y}{1}{ (x)}@n
продолжаем процесс до тех пор, пока не будет выполнено:@N
@N
@s 14 0 0 __current__
@s 14 0 -1 @small
@s 14 0 0 __current__
@s 14 0 0 symbol
@s 14 0 0 symbol
@35  {max@2 | }{~}{v@1 (x) |}{@1 г@1 }{@1 e}.@N
@s 14 0 -5 small
@s 14 0 -7 symbol
@s 14 0 -5 small
@35  {x }{e }{@[0, 1@]}@N
@N
@s 14 0 0 symbol
где  {e}  требуемая точность.@N
@N
